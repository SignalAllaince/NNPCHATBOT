trigger:
- main

variables:
  azureServiceConnectionName: 'chat'
  webAppName: 'ServiceDeskc'
  vmImageName: 'ubuntu-latest'
  environmentName: 'ServiceDeskc'
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.9'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install --upgrade setuptools
        pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
      workingDirectory: $(projectRoot)
      displayName: 'Install requirements'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
        replaceExistingArchive: true
        verbose: # (no value); this input is optional

    - script: |
        ls -R $(Build.ArtifactStagingDirectory)
      displayName: 'List artifact contents before publishing'

    - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

    - script: |
        ls -R $(Build.ArtifactStagingDirectory)
      displayName: 'List artifact contents after publishing'

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App: $(webAppName)'
            inputs:
              azureSubscription: $(azureServiceConnectionName)
              appName: $(webAppName)
              appType: webApp
              package: $(Pipeline.Workspace)/drop/Application$(Build.BuildId).zip
              deploymentMethod: zipDeploy
              startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'
